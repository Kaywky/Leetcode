/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    Set<Integer> set = new HashSet<>();
    public int longestConsecutive(TreeNode root) {
        if(root==null)
            return 0;
        set.add(help(root));
        Integer result = 0;
        for(Integer e : set){
            result=Math.max(result,e);
        }
        return (int)result;
    }
    
    private int help(TreeNode root){
        if(root.left==null && root.right==null)
            return 1;
        int left=1;
        int right=1;
        if(root.left!=null){
            if(root.val+1==root.left.val)
                left=1+help(root.left);
            else{
                set.add(help(root.left));
            }
        }
        if(root.right!=null){
            if(root.val+1==root.right.val)
                right=1+help(root.right);
            else{
                set.add(help(root.right));
            }
        }
        return Math.max(left,right);
    }
    
}
